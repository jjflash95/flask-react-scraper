{"version":3,"sources":["components/search-result.jsx","components/search-result-skeleton.jsx","components/search-results.jsx","components/save-config.jsx","utils/cookies.jsx","components/search-module.jsx","components/tracking.jsx","components/trackings-module.jsx","components/main.jsx","components/app-header.jsx","App.js","serviceWorker.js","index.js"],"names":["getSourceColour","source","toLowerCase","SearchResult","item","result","selectedItems","setSelectedItems","useState","elevation","setElevation","checked","setChecked","Card","key","title","backgroundColor","float","width","height","margin","display","alignItems","justifyContent","onMouseOver","onMouseLeave","cursor","Pane","style","boxSizing","flexDirection","padding","maxWidth","maxHeight","marginLeft","marginRight","src","image_url","marginBottom","minHeight","Text","color","fontWeight","fontSize","currency","price","Checkbox","label","onChange","newSelectedItems","index","indexOf","splice","push","marginTop","Badge","SearchResultSkeleton","dummyItem","background","bottom","alignSelf","SearchResults","array","results","clearfix","sort","a","b","map","Array","from","keys","dummy","getLoggedUser","session","Cookies","get","console","log","fetch","SaveConfiguration","search","priceline","setPriceline","selectedCurrency","setSelectedCurrency","saveDisabled","setSaveDisabled","showLogin","setShowLogin","username","setUsername","password","setPassword","handlePriceChange","e","target","value","handleCurrencyChange","saveConfig","then","res","json","data","requestOptions","method","headers","body","JSON","stringify","trackingPrice","trackingCurrency","response","saved","toaster","success","duration","danger","SideSheet","isShown","onCloseComplete","TextInputField","type","Button","onClick","token","set","path","Popover","shouldCloseOnExternalClick","content","close","Heading","Code","size","length","TextInput","Select","selected","intent","appearance","disabled","iconBefore","SearchModule","setSearch","setResults","onLoad","setOnLoad","searchInput","borderRadius","SearchInput","placeholder","onKeyDown","getLowestPricedItem","items","Tracking","tracking","id","toUpperCase","TrackingsModule","refresh","trackings","setTrackings","useEffect","Main","views","selectedIndex","setSelectedIndex","Tablist","flexBasis","tab","SidebarTab","onSelect","isSelected","aria-controls","flex","view","role","aria-labelledby","aria-hidden","AppHeader","Menu","Divider","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.6d47483c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Pane, Card, Text, Badge, Checkbox, Popover } from 'evergreen-ui'\r\n\r\nconst imageProperties = () => {\r\n    return {\r\n        maxWidth: \"310px\",\r\n        maxHeight: \"200px\",\r\n        display: \"block\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    }\r\n}\r\n\r\nconst titleProperties = () => {\r\n    return {\r\n        alignItems: \"center\",\r\n        marginBottom: \"5px\",\r\n        minHeight: \"50px\",\r\n    }\r\n}\r\n\r\nconst cardImageProperties = () => {\r\n    return {\r\n        justifyContent: \"center\",\r\n        maxWidth: \"330px\",\r\n        maxHeight: \"200px\",\r\n    }\r\n}\r\n\r\nconst paneContainerProperties = () => {\r\n    return {\r\n        width: \"330px\",\r\n        display: \"flex\",\r\n        boxSizing: \"border-box\",\r\n        flexDirection: \"column\",\r\n        padding: \"10px\",\r\n    }\r\n}\r\n\r\nconst getSourceColour = (source) => {\r\n    switch (source.toLowerCase()) {\r\n        case \"mercadolibre\":\r\n            return \"yellow\"\r\n        case \"olx\":\r\n            return \"blue\"\r\n        default:\r\n            return \"neutral\"\r\n    }\r\n}\r\n\r\n\r\nexport default function SearchResult({ result, selectedItems, setSelectedItems }) {\r\n\r\n    const [elevation, setElevation] = useState(1)\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const handlePaneHover = () => {\r\n        setElevation(3)\r\n    }\r\n\r\n    const handlePaneLeave = () => {\r\n        setElevation(1)\r\n    }\r\n\r\n\r\n    const getItemPusherFunction = (item) => {\r\n        return () => {\r\n            let newSelectedItems = [...selectedItems]\r\n            if (!checked) {\r\n                newSelectedItems.push(item)\r\n            } else {\r\n                const index = newSelectedItems.indexOf(item)\r\n                if (index < 0) return\r\n                newSelectedItems.splice(index, 1)\r\n            }\r\n            setSelectedItems(newSelectedItems)\r\n            setChecked(!checked)\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Card\r\n              key={result.title}\r\n              backgroundColor=\"white\"\r\n              float=\"left\"\r\n              width={350}\r\n              height={350}\r\n              margin={14}\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              elevation={ elevation }\r\n              onMouseOver={ handlePaneHover }\r\n              onMouseLeave={ handlePaneLeave }\r\n              // onClick={ getRedirect(result.item_url) }\r\n              cursor=\"pointer\"\r\n            >\r\n                <Pane style={ paneContainerProperties() }>\r\n                    <div style={ cardImageProperties() }>\r\n                        <img style={ imageProperties() } src={ result.image_url } />\r\n                    </div>\r\n                    <div style={ titleProperties() }>\r\n                        <Text color=\"default\">{ result.title }</Text>\r\n                    </div>\r\n                    <div>\r\n                        <Pane>\r\n                            <Text color=\"secondary\" fontWeight={500} fontSize={20}>{ result.currency } { result.price }</Text>\r\n                        </Pane>\r\n                        <Pane style={ {display:\"flex\", flexDirection: \"row\", justifyContent:\"space-between\"} }>\r\n                            <Checkbox\r\n                              label=\"Track prices\"\r\n                              checked={ checked }\r\n                              onChange={ getItemPusherFunction(result) }\r\n                            />\r\n                            <Pane style={{justifyContent: \"center\", marginTop: \"12px\"}}>\r\n                                <Badge color={getSourceColour(result.source)}>{ result.source }</Badge>\r\n                            </Pane>\r\n                        </Pane>\r\n                    </div>\r\n                    \r\n                </Pane>\r\n            </Card>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { Pane, Card, Text, Badge } from 'evergreen-ui'\r\n\r\n\r\nexport default function SearchResultSkeleton({ dummyItem }) {\r\n    const imageProperties = () => {\r\n        return {\r\n            maxWidth: \"330px\",\r\n            maxHeight: \"200px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            display: \"block\",\r\n        }\r\n    }\r\n\r\n    const titleProperties = () => {\r\n        return {\r\n            alignItems: \"center\",\r\n            marginBottom: \"5px\",\r\n            minHeight: \"50px\",\r\n        }\r\n    }\r\n\r\n    const infoProperties = () => {\r\n        return {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"5px\",\r\n            bottom: \"0\",\r\n        }\r\n    }\r\n\r\n    const cardImageProperties = () => {\r\n        return {\r\n            alignItems: \"center\",\r\n            padding: \"10px\",\r\n            width: \"330px\",\r\n            height: \"200px\",\r\n        }\r\n    }\r\n\r\n    const paneContainerProperties = () => {\r\n        return {\r\n            width: \"330px\",\r\n            display: \"flex\",\r\n            boxSizing: \"border-box\",\r\n            flexDirection: \"column\",\r\n            padding: \"10px\",\r\n        }\r\n    }\r\n\r\n    const getSourceColour = (source) => {\r\n        switch (source.toLowerCase()) {\r\n            case \"mercadolibre\":\r\n                return \"yellow\"\r\n            case \"olx\":\r\n                return \"blue\"\r\n            default:\r\n                return \"neutral\"\r\n        }\r\n    }\r\n\r\n    return (\r\n         <Card\r\n          key={dummyItem}\r\n          elevation={1}\r\n          backgroundColor=\"white\"\r\n          float=\"left\"\r\n          width={350}\r\n          height={350}\r\n          margin={14}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n            <Pane background=\"tint2\" style={ paneContainerProperties() }>\r\n                <Pane style={ cardImageProperties() }>\r\n                </Pane>\r\n                <div style={ titleProperties() }>\r\n                    <Text color=\"default\"></Text>\r\n                </div>\r\n                <div style={ infoProperties() }>\r\n                    <Text color=\"secondary\"></Text>\r\n                    <Badge color=\"neutral\" style={{alignSelf: \"flex-end\"}}></Badge>\r\n                </div>\r\n                \r\n            </Pane>\r\n        </Card>\r\n    )\r\n}","import React from 'react'\r\nimport { Pane } from 'evergreen-ui'\r\nimport SearchResult from './search-result'\r\nimport SearchResultSkeleton from './search-result-skeleton'\r\n\r\nexport default function SearchResults({ results, selectedItems, setSelectedItems }) {\r\n    const sortArray = (array) => {\r\n        return array.sort((a, b) => {\r\n            return a.price - b.price\r\n        })\r\n    }\r\n\r\n\treturn results ? (\r\n\t    <Pane clearfix>\r\n            {sortArray(results).map(result => (\r\n            \t<SearchResult result={ result } selectedItems={ selectedItems } setSelectedItems={ setSelectedItems }/>\r\n            ))}\r\n\t    </Pane>\r\n\t) : <Pane clearfix>\r\n            {Array.from(Array(50).keys()).map(dummyItem => (\r\n                <SearchResultSkeleton dummy={dummyItem} />\r\n            ))}\r\n        </Pane>\r\n}","import React, { useState } from 'react'\r\nimport {\r\n    Pane,\r\n    SideSheet,\r\n    Paragraph,\r\n    Popover,\r\n    Button,\r\n    Text,\r\n    TextInput,\r\n    TextInputField,\r\n    Select,\r\n    Code,\r\n    Heading,\r\n    toaster\r\n} from 'evergreen-ui'\r\n\r\nimport { setCookie, getCookie, deleteCookie } from '../utils/cookies'\r\n\r\nconst saveConfigProperties = () => {\r\n    return {\r\n        marginRight: \"15px\",\r\n    }\r\n}\r\n\r\nconst configButtonDivProperties = () => {\r\n    return {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        marginTop: \"10px\",\r\n    }\r\n}\r\n\r\nconst loginContainerProperties = () => {\r\n    return {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        width: \"350px\",\r\n        height: \"350px\",\r\n    }\r\n}\r\n\r\nconst loginButtonProperties = () => {\r\n    return {\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n    }\r\n}\r\n\r\nconst getLoggedUser = () => {\r\n    let session = getCookie()\r\n    console.log(session)\r\n    return fetch(`/api/me?session_token=${session}`)\r\n}\r\n\r\nexport default function SaveConfiguration({ search, selectedItems }) {\r\n    const [priceline, setPriceline] = useState(null)\r\n    const [selectedCurrency, setSelectedCurrency] = useState(\"ARS\")\r\n    const [saveDisabled, setSaveDisabled] = useState(true)\r\n    const [showLogin, setShowLogin] = useState(false)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handlePriceChange = (e) => {\r\n        setPriceline(e.target.value)\r\n        setSaveDisabled(false)\r\n    } \r\n\r\n    const handleCurrencyChange = (e) => setSelectedCurrency(e.target.value)\r\n\r\n    const saveConfig = () => {\r\n        getLoggedUser()\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data) {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    title: search,\r\n                    trackingPrice: priceline,\r\n                    trackingCurrency: selectedCurrency,\r\n                    selectedItems: selectedItems,\r\n                })\r\n            }\r\n\r\n            fetch('/api/save', requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.saved) {\r\n                        toaster.success(\"Your items are now being tracked\", { duration: 5 })\r\n                    } else {\r\n                        toaster.danger(\"Something went wrong trying to create your audience\", { duration: 5 })\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                setShowLogin(true)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username: username,\r\n                password: password,\r\n            })\r\n        }\r\n        fetch('/login', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCookie(data.token)\r\n                setShowLogin(false)\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <Pane>\r\n            <SideSheet\r\n            isShown={ showLogin }\r\n            onCloseComplete={() => setShowLogin(false)}\r\n            >\r\n                <Pane\r\n                style={ loginContainerProperties() }\r\n                >\r\n                    <TextInputField\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      onChange={ (e) => setUsername(e.target.value) }\r\n                    />\r\n                    <TextInputField\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      onChange={ (e) => setPassword(e.target.value) }\r\n                    />\r\n                    <Pane style={ loginButtonProperties() } >\r\n                        <Button height={40} onClick={ handleLogin }>Login</Button>\r\n                    </Pane> \r\n                </Pane>\r\n            </SideSheet>\r\n            <Pane style={ saveConfigProperties() }>\r\n                <Popover\r\n                    shouldCloseOnExternalClick={false}\r\n                    content={({ close }) => (\r\n                        <Pane\r\n                            width={520}\r\n                            height={140}\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"center\"\r\n                            flexDirection=\"column\"\r\n                        >\r\n                            <Pane>\r\n                                <Heading>Tracking Prices for  <Code size={500} marginLeft=\"5px\" marginRight=\"5px\">{ selectedItems.length }</Code>  items</Heading>\r\n                                <Pane>\r\n                                    <Text fontSize={16}>Notify me when any item goes below </Text>\r\n                                    <TextInput width={120} onChange={ handlePriceChange }/>\r\n                                    <Select onChange={ handleCurrencyChange }>\r\n                                      <option value=\"ARS\" selected>ARS</option>\r\n                                      <option value=\"USD\">USD</option>\r\n                                    </Select>\r\n                                </Pane>\r\n                                <Pane margin=\"5px\" style={ configButtonDivProperties() }>\r\n                                    <Button intent=\"success\" justifyContent=\"center\" appearance=\"primary\" height={40} width={140} disabled={ saveDisabled } onClick={ saveConfig }>Save</Button>\r\n                                    <Button height={40} width={140} onClick={close}>Close</Button>\r\n                                </Pane>\r\n                            </Pane>\r\n                        </Pane>\r\n                        )\r\n                    }\r\n                >\r\n                    <Button height={40} iconBefore=\"edit\">Track settings</Button>\r\n                </Popover>\r\n            </Pane>\r\n        </Pane>\r\n    )\r\n}","import Cookies from 'universal-cookie'\r\n\r\n\r\nconst setCookie = (value) => {\r\n    let cookies = new Cookies()\r\n    cookies.set('session_token', value, { path: '/' })\r\n}\r\n\r\nconst getCookie = () => {\r\n    let cookies = new Cookies()\r\n    return cookies.get('session_token')\r\n}\r\n\r\nconst deleteCookie = () => {\r\n    let cookies = new Cookies()\r\n    cookies.delete('session_token')\r\n}\r\n\r\nexport {\r\n    setCookie,\r\n    getCookie,\r\n    deleteCookie,\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Pane, SearchInput } from 'evergreen-ui'\r\n\r\nimport SearchResults from './search-results'\r\nimport SaveConfiguration from './save-config'\r\n\r\n\r\nconst headerStyle = () => {\r\n    return {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n    }\r\n}\r\n\r\nexport default function SearchModule() {\r\n    const [search, setSearch] = useState('')\r\n    const [results, setResults] = useState(null)\r\n    const [onLoad, setOnLoad] = useState(true)\r\n    const [selectedItems, setSelectedItems] = useState([])\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            searchInput(search)\r\n        }\r\n    }\r\n\r\n    const searchInput = (search) => {\r\n        setOnLoad(false)\r\n        setResults(null)\r\n        fetch(\"/?q=\" + search)\r\n        .then(res => res.json())\r\n        .then(setResults)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Pane display=\"flex\" padding={16} background=\"tint2\" borderRadius={3} style={ headerStyle() }>\r\n                <SearchInput placeholder=\"Search\" height={40} onChange={handleSearchChange} onKeyDown={handleKeyDown}/>\r\n                {selectedItems && !!selectedItems.length && <SaveConfiguration search={ search } selectedItems={ selectedItems } />}\r\n            </Pane> \r\n            { !onLoad && <SearchResults results={ results } selectedItems={ selectedItems } setSelectedItems={ setSelectedItems } /> }\r\n        </div> \r\n       )\r\n}","import React, { useState } from 'react'\r\nimport { Pane, Card, Text, Badge, Checkbox, Popover } from 'evergreen-ui'\r\n\r\n\r\nconst titleProperties = () => {\r\n    return {\r\n        float: \"left\",\r\n        marginBottom: \"5px\",\r\n    }\r\n}\r\n\r\nconst trackingInfoProperties = () => {\r\n    return {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"5px\",\r\n    }\r\n}\r\n\r\nconst paneContainerProperties = () => {\r\n    return {\r\n        display: \"flex\",\r\n        boxSizing: \"border-box\",\r\n        flexDirection: \"column\",\r\n        padding: \"10px\",\r\n    }\r\n}\r\n\r\nconst getSourceColour = (source) => {\r\n    switch (source) {\r\n        case \"mercadolibre\":\r\n            return \"yellow\"\r\n        case \"olx\":\r\n            return \"blue\"\r\n        default:\r\n            return \"neutral\"\r\n    }\r\n}\r\n\r\nconst getLowestPricedItem = (items) => {\r\n    return items.sort((a, b) => {\r\n        return a.price - b.price\r\n    })[0]\r\n}\r\n\r\nexport default function Tracking({ tracking }) {\r\n\r\n    const [elevation, setElevation] = useState(1)\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const handlePaneHover = () => {\r\n        setElevation(3)\r\n    }\r\n\r\n    const handlePaneLeave = () => {\r\n        setElevation(1)\r\n    }\r\n\r\n\r\n    return (\r\n            <Card\r\n              key={tracking.id}\r\n              backgroundColor=\"white\"\r\n              float=\"left\"\r\n              width=\"80%\"\r\n              height={120}\r\n              margin={5}\r\n              elevation={ elevation }\r\n              onMouseOver={ handlePaneHover }\r\n              onMouseLeave={ handlePaneLeave }\r\n              cursor=\"pointer\"\r\n            >\r\n                <Pane style={ paneContainerProperties() }>\r\n                    <div style={ titleProperties() }>\r\n                        <Text color=\"default\" fontSize={20} >Id: </Text><Text color=\"secondary\" fontWeight={400} fontSize={25}>{ tracking.id }</Text>\r\n                    </div>\r\n                    <div style={ trackingInfoProperties() }>\r\n                        <div>\r\n                            <Text color=\"default\" fontSize={20} >Tracking: </Text><Text color=\"secondary\" fontWeight={400} fontSize={20}>{ tracking.title.toUpperCase() }</Text>\r\n                        </div>\r\n                        <div>\r\n                            <Text color=\"default\" fontSize={20} >Total items tracked: </Text><Text color=\"secondary\" fontWeight={400} fontSize={20}>{ tracking.items.length }</Text>\r\n                        </div>                        \r\n                    </div>\r\n                    <div>\r\n                        <Pane>\r\n                            <Text fontSize={20}>Lowest Priced Item is  </Text>\r\n                            <Text color=\"secondary\" fontWeight={500} fontSize={25} color=\"#47B881\"> { getLowestPricedItem(tracking.items).currency } { getLowestPricedItem(tracking.items).price }</Text>\r\n                            <Text color=\"secondary\" fontWeight={500} fontSize={25}>/</Text>\r\n                            <Text color=\"secondary\" fontWeight={500} fontSize={25} color=\"#EC4C47\">{ tracking.currency } { tracking.price }</Text>\r\n                        </Pane>\r\n                        <Pane style={ {display:\"flex\", flexDirection: \"row\", justifyContent:\"space-between\"} }>\r\n                        </Pane>\r\n                    </div>\r\n                    \r\n                </Pane>\r\n            </Card>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Pane } from 'evergreen-ui'\r\nimport Tracking from './tracking'\r\n\r\nexport default function TrackingsModule({ refresh }) {\r\n    const [trackings, setTrackings] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/trackings\")\r\n            .then(res => res.json())\r\n            .then(setTrackings)\r\n    }, [refresh])\r\n\r\n    return (\r\n        <Pane clearfix>\r\n            {trackings.map(tracking => \r\n                <Tracking tracking={ tracking }/>\r\n            )}\r\n        </Pane>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport SearchModule from './search-module'\r\nimport TrackingsModule from './trackings-module'\r\nimport { Pane, Tablist, SidebarTab } from 'evergreen-ui'\r\n\r\n\r\n\r\nexport default function Main() {\r\n    const tabs = ['Search', 'Trackings']\r\n    const views = [<SearchModule />, <TrackingsModule refresh={selectedIndex} />]\r\n    const [selectedIndex, setSelectedIndex] = useState(0)\r\n\r\n    return (\r\n        <Pane display=\"flex\" height={240}>\r\n            <Tablist marginBottom={16} flexBasis={240} marginRight={24}>\r\n                {tabs.map((tab, index) => (\r\n                    <SidebarTab\r\n                      key={tab}\r\n                      id={tab}\r\n                      onSelect={() => setSelectedIndex(index)}\r\n                      isSelected={index === selectedIndex}\r\n                      aria-controls={`panel-${tab}`}\r\n                    >\r\n                      {tab}\r\n                    </SidebarTab>\r\n                ))}\r\n            </Tablist>\r\n            <Pane padding={16} background=\"tint1\" flex=\"1\">\r\n                {views.map((view, index) => (\r\n                    <Pane\r\n                    key={index}\r\n                    id={`panel-${index}`}\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby={index}\r\n                    aria-hidden={index !== selectedIndex}\r\n                    display={index === selectedIndex ? 'block' : 'none'}\r\n                    >\r\n                        { view }\r\n                    </Pane>\r\n                ))}\r\n            </Pane>\r\n        </Pane>\r\n    )\r\n}","import React from 'react'\r\nimport { Pane, Menu, Heading } from 'evergreen-ui'\r\n\r\n\r\nconst header = () => {\r\n  return {\r\n    width: \"100%\",\r\n    height: \"120px\",\r\n  }\r\n}\r\n\r\nexport default function AppHeader() {\r\n    return (\r\n        <Pane>\r\n            <Heading \r\n            style={ header() }\r\n            background=\"tint1\"\r\n            size={900} >\r\n                Header\r\n            </Heading>\r\n            <Menu.Divider />\r\n        </Pane>\r\n    )\r\n}","import React from 'react'\nimport Main from './components/main'\nimport UserMenu from './components/user-menu'\nimport AppHeader from './components/app-header'\n\nimport { Pane } from 'evergreen-ui'\nimport {\n  Route,\n  Switch\n} from \"react-router-dom\"\n\n\nconst wrap = () => {\n  return {\n    width: \"100%\",             \n    margin: \"auto\",\n  }\n}\n\nconst menu = () => {\n  return {\n    width: \"10%\",             \n    float: \"left\",\n  }\n}\n\nconst main = () => {\n    return {\n    width: \"90%\",             \n    float: \"left\",\n  }\n}\n\nfunction App() {\n  return (\n    <Pane clearfix className=\"App\" background=\"tint2\">\n      <header className=\"App-header\">\n      </header>\n        <AppHeader />\n        <Pane style={ wrap() } >\n          <Pane style={ main() } >\n            <Main />\n          </Pane>\n          <Pane style={ menu() } >\n          </Pane>\n        </Pane>\n        <Pane>\n        </Pane>\n    </Pane>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}